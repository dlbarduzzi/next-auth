generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// enum UserRole {
//   admin
//   user
// }

model User {
  id             String          @id @default(cuid())
  email          String?         @unique
  emailVerified  DateTime?
  hashedPassword HashedPassword?
  image          String?
  // role           UserRole @default(user)
  role           String          @default("user")
  accounts       Account[]
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt

  // The table name in the database.
  @@map(name: "users")
}

model Account {
  id                String   @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? // @db.Text - Uncomment this when using non-sqlite db.
  access_token      String? // @db.Text - Uncomment this when using non-sqlite db.
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? // @db.Text - Uncomment this when using non-sqlite db.
  session_state     String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  // The table name in the database.
  @@map(name: "accounts")
}

model HashedPassword {
  id             String   @id @default(cuid())
  userId         String   @unique
  hashedPassword String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  // The table name in the database. 
  @@map(name: "hashedpasswords")
}
